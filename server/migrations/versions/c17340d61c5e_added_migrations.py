"""Added migrations

Revision ID: c17340d61c5e
Revises: 
Create Date: 2025-01-05 02:46:40.199856

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c17340d61c5e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('consumer_user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('company', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('country_code', sa.String(length=10), nullable=False),
    sa.Column('is_validated', sa.Boolean(), nullable=True),
    sa.Column('marketing_consent', sa.Boolean(), nullable=True),
    sa.Column('industry', postgresql.ENUM('Aerospace', 'Agriculture', 'Automotive', 'Aviation & Aerospace', 'Construction', 'Consulting', 'Consumer Electronics', 'Consumer Products', 'Defense', 'Design', 'Electrical/Electronic Manufacturing', 'Energy', 'EV', 'FMCG', 'General Engineering', 'Health Care', 'HVAC', 'Import and Export', 'Industrial Automation', 'Logistics and Supply Chain', 'Machinery', 'Mechanical or Industrial Engineering', 'Medical Devices', 'Nuclear', 'Oil & Energy', 'Outsourcing/Offshoring', 'Packaging and Containers', 'Pharmaceuticals', 'Power', 'Railways', 'Research', 'Solar', name='industry_enum'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    op.create_table('supplier_user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('company', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('country_code', sa.String(length=10), nullable=False),
    sa.Column('is_validated', sa.Boolean(), nullable=True),
    sa.Column('marketing_consent', sa.Boolean(), nullable=True),
    sa.Column('company_type', postgresql.ENUM('Manufacturing', 'OEM', 'Raw Material', 'Finishing services', name='company_type_enum'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user_addresses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('address_line1', sa.String(length=255), nullable=False),
    sa.Column('address_line2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=100), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('postal_code', sa.String(length=20), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('country_code', sa.String(length=10), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['consumer_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user_files',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_url', sa.String(length=100), nullable=False),
    sa.Column('thumbnail_url', sa.String(), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=True),
    sa.Column('file_metadata', sa.JSON(), nullable=True),
    sa.Column('file_format', sa.String(length=10), nullable=True),
    sa.Column('object_id', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['consumer_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_user_files_object_id'), 'user_files', ['object_id'], unique=False)
    op.create_table('items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('cad_file_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['cad_file_id'], ['user_files.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['consumer_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('quote_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('shipping_address_id', sa.UUID(), nullable=True),
    sa.Column('billing_address_id', sa.UUID(), nullable=True),
    sa.Column('special_instructions', sa.Text(), nullable=True),
    sa.Column('expected_lead_time', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_draft', sa.Boolean(), nullable=False),
    sa.Column('admin_status', sa.String(length=50), nullable=False),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['billing_address_id'], ['user_addresses.id'], ),
    sa.ForeignKeyConstraint(['shipping_address_id'], ['user_addresses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['consumer_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('technical_drawings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.Column('drawing_name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['user_files.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('quote_item_configs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('quote_id', sa.UUID(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('process', sa.String(length=100), nullable=True),
    sa.Column('sub_process', sa.String(length=100), nullable=True),
    sa.Column('material', sa.String(length=100), nullable=True),
    sa.Column('material_grade', sa.String(length=100), nullable=True),
    sa.Column('surface_finish', sa.String(length=100), nullable=True),
    sa.Column('color', sa.String(length=50), nullable=True),
    sa.Column('tolerance', sa.String(length=50), nullable=True),
    sa.Column('target_cost', sa.Float(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('additional_details', sa.JSON(), nullable=False),
    sa.Column('last_updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('(process IS NOT NULL AND sub_process IS NOT NULL AND material IS NOT NULL AND material_grade IS NOT NULL AND tolerance IS NOT NULL) OR (process IS NULL AND sub_process IS NULL AND material IS NULL AND material_grade IS NULL AND tolerance IS NULL)', name='ck_quote_item_config_consistency'),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['quote_id'], ['quote_requests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_quote_item_configs_item_id'), 'quote_item_configs', ['item_id'], unique=False)
    op.create_index(op.f('ix_quote_item_configs_quote_id'), 'quote_item_configs', ['quote_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_quote_item_configs_quote_id'), table_name='quote_item_configs')
    op.drop_index(op.f('ix_quote_item_configs_item_id'), table_name='quote_item_configs')
    op.drop_table('quote_item_configs')
    op.drop_table('technical_drawings')
    op.drop_table('quote_requests')
    op.drop_table('items')
    op.drop_index(op.f('ix_user_files_object_id'), table_name='user_files')
    op.drop_table('user_files')
    op.drop_table('user_addresses')
    op.drop_table('supplier_user')
    op.drop_table('consumer_user')
    # ### end Alembic commands ###
